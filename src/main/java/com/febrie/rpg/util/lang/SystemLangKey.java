package com.febrie.rpg.util.lang;

public enum SystemLangKey implements ILangKey {
    // Status Keys
    STATUS_TRUE("status.true"),
    STATUS_FALSE("status.false"),
    STATUS_ONLINE("status.online"),
    STATUS_OFFLINE("status.offline"),
    STATUS_MUTED("status.muted"),
    STATUS_ACTIVE("status.active"),
    STATUS_PUBLIC("status.public"),
    STATUS_PRIVATE("status.private"),
    STATUS_NEW_MAIL("status.new_mail"),
    STATUS_READ("status.read"),
    
    // Action Keys
    ACTION_ENABLE("general.action.enable"),
    ACTION_DISABLE("general.action.disable"),
    
    // General Keys
    GENERAL_SEPARATOR("general.separator"),
    GENERAL_COMING_SOON("general.coming_soon"),
    GENERAL_CANNOT_VIEW_OTHERS_QUESTS("general.cannot_view_others_quests"),
    GENERAL_CANNOT_VIEW_OTHERS_STATS("general.cannot_view_others_stats"),
    GENERAL_CANNOT_VIEW_OTHERS_TALENTS("general.cannot_view_others_talents"),
    GENERAL_CANNOT_SELECT_OTHERS_JOB("general.cannot_select_others_job"),
    
    // Currency Keys
    CURRENCY_GOLD_NAME("currency.gold.name"),
    CURRENCY_GOLD_SYMBOL("currency.gold.symbol"),
    CURRENCY_SILVER_NAME("currency.silver.name"),
    CURRENCY_SILVER_SYMBOL("currency.silver.symbol"),
    CURRENCY_COPPER_NAME("currency.copper.name"),
    CURRENCY_COPPER_SYMBOL("currency.copper.symbol"),
    CURRENCY_GEM_NAME("currency.gem.name"),
    CURRENCY_GEM_SYMBOL("currency.gem.symbol"),
    CURRENCY_TOKEN_NAME("currency.token.name"),
    CURRENCY_TOKEN_SYMBOL("currency.token.symbol"),
    CURRENCY_COIN_NAME("currency.coin.name"),
    CURRENCY_COIN_SYMBOL("currency.coin.symbol"),
    CURRENCY_POINT_NAME("currency.point.name"),
    CURRENCY_POINT_SYMBOL("currency.point.symbol"),
    CURRENCY_CREDIT_NAME("currency.credit.name"),
    CURRENCY_CREDIT_SYMBOL("currency.credit.symbol"),
    CURRENCY_DIAMOND_NAME("currency.diamond.name"),
    CURRENCY_EMERALD_NAME("currency.emerald.name"),
    CURRENCY_GHAST_TEAR_NAME("currency.ghast_tear.name"),
    CURRENCY_NETHER_STAR_NAME("currency.nether_star.name"),
    CURRENCY_EXP_NAME("currency.exp.name"),

    // Biome Keys
    BIOME_PLAINS("biome.plains"),
    BIOME_PLAINS_NAME("biome.plains.name"),
    BIOME_PLAINS_DESCRIPTION("biome.plains.description"),
    BIOME_FOREST("biome.forest"),
    BIOME_FOREST_NAME("biome.forest.name"),
    BIOME_FOREST_DESCRIPTION("biome.forest.description"),
    BIOME_DESERT("biome.desert"),
    BIOME_DESERT_NAME("biome.desert.name"),
    BIOME_DESERT_DESCRIPTION("biome.desert.description"),
    BIOME_JUNGLE("biome.jungle"),
    BIOME_JUNGLE_NAME("biome.jungle.name"),
    BIOME_JUNGLE_DESCRIPTION("biome.jungle.description"),
    BIOME_TAIGA("biome.taiga"),
    BIOME_TAIGA_NAME("biome.taiga.name"),
    BIOME_TAIGA_DESCRIPTION("biome.taiga.description"),
    BIOME_SNOWY_PLAINS("biome.snowy_plains"),
    BIOME_SNOWY_PLAINS_NAME("biome.snowy_plains.name"),
    BIOME_SNOWY_PLAINS_DESCRIPTION("biome.snowy_plains.description"),
    BIOME_SAVANNA("biome.savanna"),
    BIOME_SAVANNA_NAME("biome.savanna.name"),
    BIOME_SAVANNA_DESCRIPTION("biome.savanna.description"),
    BIOME_SWAMP("biome.swamp"),
    BIOME_SWAMP_NAME("biome.swamp.name"),
    BIOME_SWAMP_DESCRIPTION("biome.swamp.description"),
    BIOME_MUSHROOM_FIELDS("biome.mushroom_fields"),
    BIOME_MUSHROOM_FIELDS_NAME("biome.mushroom_fields.name"),
    BIOME_MUSHROOM_FIELDS_DESCRIPTION("biome.mushroom_fields.description"),
    BIOME_BEACH("biome.beach"),
    BIOME_BEACH_NAME("biome.beach.name"),
    BIOME_BEACH_DESCRIPTION("biome.beach.description"),
    BIOME_FLOWER_FOREST("biome.flower_forest"),
    BIOME_FLOWER_FOREST_NAME("biome.flower_forest.name"),
    BIOME_FLOWER_FOREST_DESCRIPTION("biome.flower_forest.description"),
    BIOME_BAMBOO_JUNGLE("biome.bamboo_jungle"),
    BIOME_BAMBOO_JUNGLE_NAME("biome.bamboo_jungle.name"),
    BIOME_BAMBOO_JUNGLE_DESCRIPTION("biome.bamboo_jungle.description"),
    BIOME_DARK_FOREST("biome.dark_forest"),
    BIOME_DARK_FOREST_NAME("biome.dark_forest.name"),
    BIOME_DARK_FOREST_DESCRIPTION("biome.dark_forest.description"),
    BIOME_BIRCH_FOREST("biome.birch_forest"),
    BIOME_BIRCH_FOREST_NAME("biome.birch_forest.name"),
    BIOME_BIRCH_FOREST_DESCRIPTION("biome.birch_forest.description"),
    BIOME_BADLANDS("biome.badlands"),
    BIOME_BADLANDS_NAME("biome.badlands.name"),
    BIOME_BADLANDS_DESCRIPTION("biome.badlands.description"),
    BIOME_OCEAN("biome.ocean"),
    BIOME_OCEAN_NAME("biome.ocean.name"),
    BIOME_OCEAN_DESCRIPTION("biome.ocean.description"),
    BIOME_CHERRY_GROVE("biome.cherry_grove"),
    BIOME_CHERRY_GROVE_NAME("biome.cherry_grove.name"),
    BIOME_CHERRY_GROVE_DESCRIPTION("biome.cherry_grove.description"),
    
    // Job Keys
    JOB_CATEGORIES_WARRIOR("job.categories.warrior"),
    JOB_CATEGORIES_MAGE("job.categories.mage"),
    JOB_CATEGORIES_ARCHER("job.categories.archer"),

    // Job Names
    JOB_WARRIOR_NAME("job.warrior.name"),
    JOB_MAGE_NAME("job.mage.name"),
    JOB_ARCHER_NAME("job.archer.name"),
    JOB_ROGUE_NAME("job.rogue.name"),
    JOB_BERSERKER_NAME("job.berserker.name"),
    JOB_BRUISER_NAME("job.bruiser.name"),
    JOB_TANK_NAME("job.tank.name"),
    JOB_PRIEST_NAME("job.priest.name"),
    JOB_DARK_MAGE_NAME("job.dark_mage.name"),
    JOB_MERCY_NAME("job.mercy.name"),
    JOB_SNIPER_NAME("job.sniper.name"),
    JOB_SHOTGUNNER_NAME("job.shotgunner.name"),
    JOB_ASSASSIN_NAME("job.assassin.name"),
    JOB_PALADIN_NAME("job.paladin.name"),
    JOB_SUMMONER_NAME("job.summoner.name"),
    JOB_NECROMANCER_NAME("job.necromancer.name"),
    JOB_DRUID_NAME("job.druid.name"),
    JOB_RANGER_NAME("job.ranger.name"),
    JOB_WARLOCK_NAME("job.warlock.name"),

    // Job Descriptions
    JOB_WARRIOR_DESCRIPTION("job.warrior.description"),
    JOB_MAGE_DESCRIPTION("job.mage.description"),
    JOB_ARCHER_DESCRIPTION("job.archer.description"),
    JOB_ROGUE_DESCRIPTION("job.rogue.description"),
    JOB_BERSERKER_DESCRIPTION("job.berserker.description"),
    JOB_BRUISER_DESCRIPTION("job.bruiser.description"),
    JOB_TANK_DESCRIPTION("job.tank.description"),
    JOB_PRIEST_DESCRIPTION("job.priest.description"),
    JOB_DARK_MAGE_DESCRIPTION("job.dark_mage.description"),
    JOB_MERCY_DESCRIPTION("job.mercy.description"),
    JOB_SNIPER_DESCRIPTION("job.sniper.description"),
    JOB_SHOTGUNNER_DESCRIPTION("job.shotgunner.description"),
    JOB_ASSASSIN_DESCRIPTION("job.assassin.description"),
    JOB_PALADIN_DESCRIPTION("job.paladin.description"),
    JOB_SUMMONER_DESCRIPTION("job.summoner.description"),
    JOB_NECROMANCER_DESCRIPTION("job.necromancer.description"),
    JOB_DRUID_DESCRIPTION("job.druid.description"),
    JOB_RANGER_DESCRIPTION("job.ranger.description"),
    JOB_WARLOCK_DESCRIPTION("job.warlock.description"),
    
    // Stat Keys
    STAT_STRENGTH("stat.strength"),
    STAT_DEFENSE("stat.defense"),
    STAT_INTELLIGENCE("stat.intelligence"),
    STAT_SPEED("stat.speed"),
    STAT_LUCK("stat.luck"),
    STAT_HEALTH("stat.health"),
    STAT_MANA("stat.mana"),
    STAT_STAMINA("stat.stamina"),
    STAT_CRITICAL("stat.critical"),
    STAT_EVASION("stat.evasion"),
    STAT_ACCURACY("stat.accuracy"),
    STAT_STRENGTH_TOOLTIP("stat.strength.tooltip"),
    STAT_DEFENSE_TOOLTIP("stat.defense.tooltip"),
    STAT_INTELLIGENCE_TOOLTIP("stat.intelligence.tooltip"),
    STAT_SPEED_TOOLTIP("stat.speed.tooltip"),
    STAT_LUCK_TOOLTIP("stat.luck.tooltip"),
    STAT_HEALTH_TOOLTIP("stat.health.tooltip"),
    STAT_MANA_TOOLTIP("stat.mana.tooltip"),
    STAT_STAMINA_TOOLTIP("stat.stamina.tooltip"),
    STAT_CRITICAL_TOOLTIP("stat.critical.tooltip"),
    STAT_EVASION_TOOLTIP("stat.evasion.tooltip"),
    STAT_ACCURACY_TOOLTIP("stat.accuracy.tooltip"),
    
    // Talent Keys
    TALENT_WARRIOR_SWORD_MASTERY("talent.warrior.sword_mastery"),
    TALENT_WARRIOR_SHIELD_BASH("talent.warrior.shield_bash"),
    TALENT_WARRIOR_BERSERKER_RAGE("talent.warrior.berserker_rage"),
    TALENT_WARRIOR_DEFENSIVE_STANCE("talent.warrior.defensive_stance"),
    TALENT_WARRIOR_WHIRLWIND("talent.warrior.whirlwind"),
    TALENT_ARCHER_PRECISE_SHOT("talent.archer.precise_shot"),
    TALENT_ARCHER_MULTI_SHOT("talent.archer.multi_shot"),
    TALENT_ARCHER_EXPLOSIVE_ARROW("talent.archer.explosive_arrow"),
    TALENT_ARCHER_HUNTERS_MARK("talent.archer.hunters_mark"),
    TALENT_ARCHER_EVASION("talent.archer.evasion"),
    TALENT_MAGE_FIREBALL("talent.mage.fireball"),
    TALENT_MAGE_FROST_BOLT("talent.mage.frost_bolt"),
    TALENT_MAGE_ARCANE_MISSILES("talent.mage.arcane_missiles"),
    TALENT_MAGE_TELEPORT("talent.mage.teleport"),
    TALENT_MAGE_MANA_SHIELD("talent.mage.mana_shield"),
    TALENT_ROGUE_STEALTH("talent.rogue.stealth"),
    TALENT_ROGUE_BACKSTAB("talent.rogue.backstab"),
    TALENT_ROGUE_POISON_BLADE("talent.rogue.poison_blade"),
    TALENT_ROGUE_SMOKE_BOMB("talent.rogue.smoke_bomb"),
    TALENT_ROGUE_SHADOW_STEP("talent.rogue.shadow_step"),
    TALENT_PRIEST_HEAL("talent.priest.heal"),
    TALENT_PRIEST_HOLY_LIGHT("talent.priest.holy_light"),
    TALENT_PRIEST_DIVINE_SHIELD("talent.priest.divine_shield"),
    TALENT_PRIEST_RESURRECTION("talent.priest.resurrection"),
    TALENT_PRIEST_BLESSING("talent.priest.blessing"),
    
    // Notification Mode Keys
    NOTIFICATION_MODE_ALL("notification.mode.all"),
    NOTIFICATION_MODE_FRIEND_ONLY("notification.mode.friend-only"),
    NOTIFICATION_MODE_GUILD_ONLY("notification.mode.guild-only"),
    NOTIFICATION_MODE_OFF("notification.mode.off"),
    NOTIFICATION_MODE_UNKNOWN("notification.mode.unknown"),
    NOTIFICATION_MODE_ALL_DESC("notification.mode.all.desc"),
    NOTIFICATION_MODE_FRIEND_ONLY_DESC("notification.mode.friend-only.desc"),
    NOTIFICATION_MODE_GUILD_ONLY_DESC("notification.mode.guild-only.desc"),
    NOTIFICATION_MODE_OFF_DESC("notification.mode.off.desc"),
    NOTIFICATION_MODE_UNKNOWN_DESC("notification.mode.unknown.desc"),
    
    // Mailbox Keys
    MAILBOX_DELETE_CONFIRM_WORD("mailbox.delete_confirm_word"),
    
    // Dialog Keys
    DIALOG_NPC_GREETING("dialog.npc.greeting"),
    DIALOG_NPC_FAREWELL("dialog.npc.farewell"),
    DIALOG_NPC_QUEST_AVAILABLE("dialog.npc.quest_available"),
    DIALOG_NPC_QUEST_IN_PROGRESS("dialog.npc.quest_in_progress"),
    DIALOG_NPC_QUEST_COMPLETE("dialog.npc.quest_complete"),
    DIALOG_NPC_SHOP_GREETING("dialog.npc.shop_greeting"),
    DIALOG_NPC_NO_QUESTS("dialog.npc.no_quests"),
    DIALOG_PLAYER_ACCEPT("dialog.player.accept"),
    DIALOG_PLAYER_DECLINE("dialog.player.decline"),
    DIALOG_PLAYER_MORE_INFO("dialog.player.more_info"),
    DIALOG_PLAYER_GOODBYE("dialog.player.goodbye"),
    
    // Rank Keys
    RANK_NOVICE("rank.novice"),
    RANK_APPRENTICE("rank.apprentice"),
    RANK_JOURNEYMAN("rank.journeyman"),
    RANK_EXPERT("rank.expert"),
    RANK_MASTER("rank.master"),
    RANK_GRANDMASTER("rank.grandmaster"),
    RANK_LEGENDARY("rank.legendary"),
    RANK_MYTHIC("rank.mythic"),
    RANK_DIVINE("rank.divine"),
    RANK_ETERNAL("rank.eternal"),
    
    // Rarity Keys
    RARITY_COMMON("rarity.common"),
    RARITY_UNCOMMON("rarity.uncommon"),
    RARITY_RARE("rarity.rare"),
    RARITY_EPIC("rarity.epic"),
    RARITY_LEGENDARY("rarity.legendary"),
    RARITY_MYTHIC("rarity.mythic"),
    RARITY_ANCIENT("rarity.ancient"),
    RARITY_DIVINE("rarity.divine"),
    RARITY_UNIQUE("rarity.unique"),
    RARITY_ARTIFACT("rarity.artifact"),
    
    // World Keys
    WORLD_SPAWN("world.spawn"),
    WORLD_HUB("world.hub"),
    WORLD_LOBBY("world.lobby"),
    WORLD_ARENA("world.arena"),
    WORLD_DUNGEON("world.dungeon"),
    WORLD_RAID("world.raid"),
    WORLD_BATTLEGROUND("world.battleground"),
    WORLD_WILDERNESS("world.wilderness"),
    WORLD_CITY("world.city"),
    WORLD_VILLAGE("world.village"),
    WORLD_OUTPOST("world.outpost"),
    WORLD_FORTRESS("world.fortress"),
    WORLD_CASTLE("world.castle"),
    WORLD_TEMPLE("world.temple"),
    WORLD_RUINS("world.ruins"),
    
    // Permission Keys
    PERMISSION_BUILD("permission.build"),
    PERMISSION_BREAK("permission.break"),
    PERMISSION_INTERACT("permission.interact"),
    PERMISSION_CONTAINER("permission.container"),
    PERMISSION_TELEPORT("permission.teleport"),
    PERMISSION_INVITE("permission.invite"),
    PERMISSION_KICK("permission.kick"),
    PERMISSION_BAN("permission.ban"),
    PERMISSION_PROMOTE("permission.promote"),
    PERMISSION_DEMOTE("permission.demote"),
    PERMISSION_SETTINGS("permission.settings"),
    PERMISSION_ADMIN("permission.admin"),
    
    // Settings Keys
    SETTINGS_PVP("settings.pvp"),
    SETTINGS_MOB_SPAWN("settings.mob_spawn"),
    SETTINGS_FIRE_SPREAD("settings.fire_spread"),
    SETTINGS_TNT("settings.tnt"),
    SETTINGS_EXPLOSION("settings.explosion"),
    SETTINGS_ANIMAL_SPAWN("settings.animal_spawn"),
    SETTINGS_MONSTER_SPAWN("settings.monster_spawn"),
    SETTINGS_ITEM_DROP("settings.item_drop"),
    SETTINGS_ITEM_PICKUP("settings.item_pickup"),
    SETTINGS_CHAT("settings.chat"),
    SETTINGS_MUSIC("settings.music"),
    SETTINGS_SOUND("settings.sound"),
    SETTINGS_PARTICLES("settings.particles"),
    SETTINGS_WEATHER("settings.weather"),
    SETTINGS_TIME("settings.time"),
    SETTINGS_PERSONAL("settings.personal"),
    
    // Damage Type Keys
    DAMAGE_PHYSICAL("damage.physical"),
    DAMAGE_MAGICAL("damage.magical"),
    DAMAGE_TRUE("damage.true"),
    DAMAGE_FIRE("damage.fire"),
    DAMAGE_ICE("damage.ice"),
    DAMAGE_LIGHTNING("damage.lightning"),
    DAMAGE_POISON("damage.poison"),
    DAMAGE_HOLY("damage.holy"),
    DAMAGE_DARK("damage.dark"),
    DAMAGE_NATURE("damage.nature"),
    
    // Buff/Debuff Keys
    EFFECT_STRENGTH("effect.strength"),
    EFFECT_WEAKNESS("effect.weakness"),
    EFFECT_SPEED("effect.speed"),
    EFFECT_SLOWNESS("effect.slowness"),
    EFFECT_HASTE("effect.haste"),
    EFFECT_MINING_FATIGUE("effect.mining_fatigue"),
    EFFECT_JUMP_BOOST("effect.jump_boost"),
    EFFECT_NAUSEA("effect.nausea"),
    EFFECT_REGENERATION("effect.regeneration"),
    EFFECT_RESISTANCE("effect.resistance"),
    EFFECT_FIRE_RESISTANCE("effect.fire_resistance"),
    EFFECT_WATER_BREATHING("effect.water_breathing"),
    EFFECT_INVISIBILITY("effect.invisibility"),
    EFFECT_BLINDNESS("effect.blindness"),
    EFFECT_NIGHT_VISION("effect.night_vision"),
    EFFECT_HUNGER("effect.hunger"),
    EFFECT_POISON("effect.poison"),
    EFFECT_WITHER("effect.wither"),
    EFFECT_HEALTH_BOOST("effect.health_boost"),
    EFFECT_ABSORPTION("effect.absorption"),
    EFFECT_SATURATION("effect.saturation"),
    EFFECT_GLOWING("effect.glowing"),
    EFFECT_LEVITATION("effect.levitation"),
    EFFECT_LUCK("effect.luck"),
    EFFECT_UNLUCK("effect.unluck"),
    
    // Scoreboard Keys
    SCOREBOARD_TITLE("scoreboard.title"),
    SCOREBOARD_LEVEL("scoreboard.level"),
    SCOREBOARD_GOLD("scoreboard.gold"),
    SCOREBOARD_ONLINE("scoreboard.online"),
    SCOREBOARD_LOCATION("scoreboard.location"),
    SCOREBOARD_QUEST("scoreboard.quest"),
    SCOREBOARD_PARTY("scoreboard.party"),
    SCOREBOARD_GUILD("scoreboard.guild"),
    SCOREBOARD_COMBAT_POWER("scoreboard.combat_power"),
    SCOREBOARD_RANK("scoreboard.rank"),
    SCOREBOARD_KILLS("scoreboard.kills"),
    SCOREBOARD_DEATHS("scoreboard.deaths"),
    SCOREBOARD_KDR("scoreboard.kdr"),
    SCOREBOARD_PLAYTIME("scoreboard.playtime"),
    
    // Title/Subtitle Keys
    TITLE_WELCOME("title.welcome"),
    TITLE_LEVEL_UP("title.level_up"),
    TITLE_QUEST_COMPLETE("title.quest_complete"),
    TITLE_ACHIEVEMENT_UNLOCKED("title.achievement_unlocked"),
    TITLE_DEATH("title.death"),
    TITLE_RESPAWN("title.respawn"),
    TITLE_VICTORY("title.victory"),
    TITLE_DEFEAT("title.defeat"),
    TITLE_WAVE_START("title.wave_start"),
    TITLE_WAVE_COMPLETE("title.wave_complete"),
    TITLE_BOSS_SPAWN("title.boss_spawn"),
    TITLE_BOSS_DEFEATED("title.boss_defeated"),
    
    // Actionbar Keys
    ACTIONBAR_HEALTH("actionbar.health"),
    ACTIONBAR_MANA("actionbar.mana"),
    ACTIONBAR_STAMINA("actionbar.stamina"),
    ACTIONBAR_EXPERIENCE("actionbar.experience"),
    ACTIONBAR_SKILL_READY("actionbar.skill_ready"),
    ACTIONBAR_SKILL_COOLDOWN("actionbar.skill_cooldown"),
    ACTIONBAR_COMBAT_ENTER("actionbar.combat_enter"),
    ACTIONBAR_COMBAT_LEAVE("actionbar.combat_leave"),
    ACTIONBAR_BUFF_APPLIED("actionbar.buff_applied"),
    ACTIONBAR_DEBUFF_APPLIED("actionbar.debuff_applied"),
    
    // Placeholder Keys
    PLACEHOLDER_PLAYER_NAME("placeholder.player_name"),
    PLACEHOLDER_PLAYER_LEVEL("placeholder.player_level"),
    PLACEHOLDER_PLAYER_JOB("placeholder.player_job"),
    PLACEHOLDER_PLAYER_GOLD("placeholder.player_gold"),
    PLACEHOLDER_PLAYER_LOCATION("placeholder.player_location"),
    PLACEHOLDER_PLAYER_HEALTH("placeholder.player_health"),
    PLACEHOLDER_PLAYER_MANA("placeholder.player_mana"),
    PLACEHOLDER_PLAYER_COMBAT_POWER("placeholder.player_combat_power"),
    PLACEHOLDER_PLAYER_GUILD("placeholder.player_guild"),
    PLACEHOLDER_PLAYER_PARTY("placeholder.player_party"),
    PLACEHOLDER_PLAYER_RANK("placeholder.player_rank"),
    PLACEHOLDER_PLAYER_PLAYTIME("placeholder.player_playtime"),
    
    // Additional Missing Keys from User's List
    BOSSBAR_QUEST_PROGRESS("bossbar.quest_progress"),
    BOSSBAR_DUNGEON_TIMER("bossbar.dungeon_timer"),
    BOSSBAR_BOSS_HEALTH("bossbar.boss_health"),
    BOSSBAR_WAVE_PROGRESS("bossbar.wave_progress"),
    
    HOLOGRAM_NPC_NAME("hologram.npc_name"),
    HOLOGRAM_NPC_TITLE("hologram.npc_title"),
    HOLOGRAM_QUEST_MARKER("hologram.quest_marker"),
    HOLOGRAM_SHOP_MARKER("hologram.shop_marker"),
    
    LOOT_COMMON_DROP("loot.common_drop"),
    LOOT_RARE_DROP("loot.rare_drop"),
    LOOT_EPIC_DROP("loot.epic_drop"),
    LOOT_LEGENDARY_DROP("loot.legendary_drop"),
    
    SKILL_CAST_SUCCESS("skill.cast_success"),
    SKILL_CAST_FAIL("skill.cast_fail"),
    SKILL_ON_COOLDOWN("skill.on_cooldown"),
    SKILL_NO_MANA("skill.no_mana"),
    SKILL_NO_TARGET("skill.no_target"),
    SKILL_OUT_OF_RANGE("skill.out_of_range"),
    
    ENCHANT_SUCCESS("enchant.success"),
    ENCHANT_FAIL("enchant.fail"),
    ENCHANT_MAX_LEVEL("enchant.max_level"),
    ENCHANT_INCOMPATIBLE("enchant.incompatible"),
    
    CRAFT_SUCCESS("craft.success"),
    CRAFT_FAIL("craft.fail"),
    CRAFT_NO_MATERIALS("craft.no_materials"),
    CRAFT_NO_RECIPE("craft.no_recipe"),
    
    MOUNT_SUMMONED("mount.summoned"),
    MOUNT_DISMISSED("mount.dismissed"),
    MOUNT_IN_COMBAT("mount.in_combat"),
    MOUNT_COOLDOWN("mount.cooldown"),
    
    PET_SUMMONED("pet.summoned"),
    PET_DISMISSED("pet.dismissed"),
    PET_LEVEL_UP("pet.level_up"),
    PET_EVOLVED("pet.evolved"),

    WARZONE_ENTERED("warzone.entered"),
    WARZONE_LEFT("warzone.left"),
    WARZONE_KILL("warzone.kill"),
    WARZONE_DEATH("warzone.death"),
    WARZONE_CAPTURE("warzone.capture"),
    
    MINIGAME_START("minigame.start"),
    MINIGAME_END("minigame.end"),
    MINIGAME_WIN("minigame.win"),
    MINIGAME_LOSE("minigame.lose"),
    MINIGAME_DRAW("minigame.draw"),
    ISLAND_GUI_MAIN_TITLE_WITH_NAME("island.gui.main.title_with_name"),
    ISLAND_GUI_MAIN_TITLE("island.gui.main.title"),
    ISLAND_DEFAULT_NAME("island.default-name"),
    ISLAND_GUI_CREATION_SELECTED("island.gui.creation.selected"),
    ISLAND_GUI_CREATION_CLICK_TO_SELECT("island.gui.creation.click-to-select"),
    ISLAND_ROLES_SUB_OWNER("island.roles.sub-owner"),
    ISLAND_ROLES_MEMBER("island.roles.member"),
    ISLAND_ROLES_WORKER("island.roles.worker"),
    ISLAND_CONTRIBUTE_AMOUNT_TOO_LOW("island.contribute.amount-too-low"),
    ISLAND_CONTRIBUTE_INVALID_AMOUNT("island.contribute.invalid-amount"),
    ISLAND_GUI_CONTRIBUTE_CONTRIBUTION_INPUT_TEXT("island.gui.contribute.contribution-input-text"),
    ISLAND_GUI_CONTRIBUTE_CONTRIBUTION_INPUT_TITLE("island.gui.contribute.contribution-input-title"),
    ISLAND_DELETE_CONFIRM_WORD("island.delete.confirm-word"),
    ISLAND_DELETE_INPUT_ERROR("island.delete.input-error"),
    ISLAND_DELETE_INPUT_TEXT("island.delete.input-text"),
    ISLAND_DELETE_INPUT_TITLE("island.delete.input-title"),
    ISLAND_MEMBER_KICK_CONFIRM_WORD("island.member.kick-confirm-word"),
    ISLAND_MEMBER_KICK_INPUT_ERROR("island.member.kick-input-error"),
    ISLAND_MEMBER_KICK_INPUT_TEXT("island.member.kick-input-text"),
    ISLAND_MEMBER_KICK_INPUT_TITLE("island.member.kick-input-title");
    
    private final String key;
    
    SystemLangKey(String key) {
        this.key = key;
    }
    
    @Override
    public String key() {
        return key;
    }
    
    @Override
    public String getDefaultValue() {
        return key;
    }
}